set relativenumber
set number
set showmode
set hlsearch
set ignorecase smartcase
set visualbell
set noerrorbells

set surround
set easymotion
" set commentary

set clipboard+=unnamed
set clipboard+=ideaput

let mapleader = " "

set idearefactormode=keep

nmap <leader>l :action :cursive.repl.actions/load-file<CR>
nmap <leader>R :action :cursive.repl.actions/run-top-sexp<CR>
nmap <leader>gr :action :cursive.repl.actions/jump-to-repl<CR>
nmap <leader>k :action :cursive.actions.paredit/raise<CR>
nmap < :action :cursive.actions.paredit/barf-forwards<CR>
nmap > :action :cursive.actions.paredit/slurp-forwards<CR>
nmap <leader>n :action :cursive.repl.actions/switch-namespace<CR>
nmap <leader>x :action :cursive.actions.paredit/kill-sexp<CR>
nmap <leader>r :action RenameElement<CR>
nmap <leader>b <Action>(ToggleLineBreakpoint)<CR>
nmap <leader>z <Action>(ToggleDistractionFreeMode)<CR>
" nnoremap <leader> <Action>(GotoNextError)<CR>
" nnoremap <S-Space> <Action>(GotoPreviousError)<CR>
nmap <leader>t :action GotoRelated<CR>
nmap <leader>/ :action FindInPath<CR>
nmap <leader>i :action Inline<CR>
nmap <leader>d :action QuickJavaDoc<CR>
nmap <leader>a :action IntroduceActionsGroup<CR>
vmap <leader>e :action ExtractMethod<CR>

 
nmap <leader>f <plug>(easymotion-s)<CR>
" nmap <leader>e <plug>(easymotion-f)<CR>
vmap <leader>f <Plug>(easymotion-s)<CR>
" vmap <leader>e <Plug>(easymotion-f)<CR>
